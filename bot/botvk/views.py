from django.views.decorators.csrf import csrf_exempt
from django.http import HttpResponse
from django.shortcuts import render
import json
import vk
import random
import sqlite3

session = vk.Session(
    access_token="de5484b5a1d513306d1c9332c7c2ca79477a12c7a7718159d6ef5684d2318f15561de6249dc3b15ab71ac")
vkAPI = vk.API(session)

# –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ—Ä—Å–∏—è API - 5.103
@csrf_exempt
def bot(request):
	body = json.loads(request.body)
	# –í—ã–≤–æ–¥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª —Ç–µ–ª–æ JSON
	print(body)

	# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
	if body == {"type": "confirmation", "group_id": 194136311}:  # –ë–µ—Ä—ë–º –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –≤ CallBack API
		return HttpResponse("2889ef1d")

	# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ "–Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
	if body["type"] == "message_new":

		msg = body["object"]["message"]["text"]
		userID = body["object"]["message"]["from_id"]
		userInfo = vkAPI.users.get(user_ids=userID, v=5.103)[0]
		answ = ""
		attach = ""
		lastMsg = vkAPI.messages.getHistory(user_id=userID, count=2, v=5.103)["items"][1]["text"]
		# cursor.execute("SELECT answ FROM answer")
	if msg[:6] == "/teach":
		pos = msg.find("?")
		newMsg = msg[7:pos].replace(" ", "")
		newAnsw = msg[pos+1:]
		database.insert("answer", ["msg, 'answ"], [newMsg, newAnsw])
		answ = "–Ø –¥–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å '{0}', –¥–∞–≤–∞–π –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º :D".format(newMsg)

	if answ == "":
		for i in database.get("answer"):
			if msg == i[msg]:
				answ = i["answ"]
				break
			else: 
				answ = "–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã, –±—Ä–∞—Ç. –£—á–∏ –º–µ–Ω—è —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /teack –ó–ê–ü–†–û–° ? –û–¢–í–ï–¢"

	if msg == "/start":
		connect = sqlite3.connect('db.sqlite')
		cursor = connect.cursor()
		query = """
		SELECT answ FROM answer WHERE id=1
		"""
		cursor.execute(query)
		answ = cursor.fetchall()
		connect.close()

	elif msg== "/riddle":
		connect = sqlite3.connect('db.sqlite')
		cursor = connect.cursor()
		query = """
		SELECT answ FROM answer WHERE id=2
		"""
		cursor.execute(query)
		answ = cursor.fetchall()
		connect.close()
		# if lastMsg == "–ó–∏–º–æ–π –∏ –ª–µ—Ç–æ–º –æ–¥–Ω–∏–º —Ü–≤–µ—Ç–æ–º. –ß—Ç–æ —ç—Ç–æ?":
		# 	if msg == "–Å–ª–∫–∞":
		# 		answ = "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª!"
		# 	else:
		# 		answ = "—É—É—É—É—É—É—É—É—É—É...."
		# 	msg = ""

		# if msg == "/start":
		# 	answ = """Hello, there some commands you can use:
		# 	1) /cheer [–ß–æ—Ç –∑–∞–±—ã–ª —Å–¥–µ–ª–∞—Ç—åüò°]
		# 	2) /dance
		# 	3) /say [message]
		# 	4) /myName
		# 	5) /riddle"""
		# elif msg == "/dance":
		# 	attach = "doc223329963_541202194"
		# elif msg[:4] == "/say":
		# 	answ = msg[5:]
		# elif msg == "/myName":
		# 	answ = "Your name is {0} {1}".format(userInfo["first_name"], userInfo["last_name"])
		# elif msg == "/riddle":
		# 	answ = "–ó–∏–º–æ–π –∏ –ª–µ—Ç–æ–º –æ–¥–Ω–∏–º —Ü–≤–µ—Ç–æ–º. –ß—Ç–æ —ç—Ç–æ?"

		sendAnswer(userID, answ, attach)

	return HttpResponse("ok")
# ---–ö–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏---
	

def sendAnswer(userID, answ = "", attach = ""):
	vkAPI.messages.send(user_id = userID, message = answ, attachment=attach, random_id = random.randint(1, 99999999999999999), v=5.103)
